name: Publish Docker
# https://github.com/marketplace/actions/build-tag-publish-docker
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Publish to Registry
      uses: HurricanKai/Publish-Docker-Github-Action@master
      with:
        name: myDocker/repository
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


      - name: Docker build then push
        uses: xCodeOwl/essl-lab-docs@master
        env:
            DOCKER_USER: ${{ secrets.DOCKER_USER }}
            PASSWORD: ${{ secrets.PASSWORD }}

            SEMVER: 2.0.1
            HOST: docker.com
            ORG: codebird
            APPNAME: essl-docs
            # if DEV is true then your image tag is as follow
            # 0.1.0-dev-c7bf9e21
            # where c7bf9e21 is your 8 char git hash
            # best for your staging server
            # else, the tag will be 0.1.0 ($SEMVER)
            DEV: false


name: Build and Publish
# https://event-driven.io/en/how_to_buid_and_push_docker_image_with_github_actions/

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
  # run it during pull request
  pull_request:

defaults:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build image and push to Docker Hub Registry
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
            codebird/essl-docs:v3
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


name: Continous Integration and Continous Delivery
#   https://github.com/marketplace/actions/docker-build-then-push

on: [push]
# release:
#   types: [published]
  
jobs:
  processing_docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Check out code
#     - name: Build and Test
#       # Run your CI script before build docker image  
#       run: make install && \
#            make test && \
#            make coverage && \
#            make cleanup
      - name: Starting pipeline
        run: echo Pipeline started!
    
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: codebird/essl-docs
          tags: v3, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.PASSWORD }}


name: Publish Docker image
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
on:
  release:
    types: [published]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: codebird/essl-docs
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
